#!/usr/bin/env python
import sys
import subprocess
import os

emitllvm="-target mipsel-unknown-linux -emit-llvm -c --sysroot=/l/home/rafael/p/openisa/newlib/install/oi-elf"
llvminstall="/l/home/rafael/p/llvm/llvm-3.3/install/bin/" 
llvmllc="llc -relocation-model=static"
llcargs="-load=/l/home/rafael/p/openisa/backend/OIBackend.so -march=oiel"
oias="/l/home/rafael/p/openisa/backend/oife -assemble -filetype=obj"
crossmips="/l/home/rafael/p/openisa/cross/cross-tools/bin/mipsel-unknown-linux-gnu-gcc --sysroot=/l/home/rafael/p/openisa/newlib/install/oi-elf -specs /l/home/rafael/p/openisa/newlib/install/oi-elf/lib/nosys.specs"

#  compilar usando -S com o gcc ao inves de -c
verbose=False
if verbose == True:
    print sys.argv
sys.argv
args_imed = ""
args = ""
flags = ""
prox = False
hasO1 = False
hasO2 = False
hasO3 = False
hasDebug = False
genObj = False
genAs = False
isAsInput = False
arqoutput = ""

for var in sys.argv[1:]:
    if var == "-o":
        prox = True
        args = args + var + " "
        args_imed = args_imed + var + " "
    elif var == "-O1":
        hasO1 = True
        flags = flags + var + " "         
    elif var == "-O2":
        hasO2 = True
        flags = flags + var + " "         
    elif var == "-O3":
        hasO3 = True
        flags = flags + var + " "         
    elif var == "-S":
        genAs = True
    elif var == "-g":
        hasDebug = True
        args = args + var + " "
        args_imed = args_imed + var + " " 
    elif var == "-c":
        genObj = True
#    elif var[:1] == "-":
#        flags = flags + var + " "
    elif prox == True:
        arqoutput = var
        arqoutput_imed = var + "._bc" 
        arqoutput_imed2 = var + "._bco"
        arqoutput_imed3 = var + "._s"
        arqoutput_imed4 = var + ".o"
        args = args + arqoutput + " "
        args_imed = args_imed + arqoutput_imed + " "
        prox = False
    elif var[:1] != "-":
        baseName = os.path.basename(var)
        fileName, fileExtension = os.path.splitext(baseName)
        if fileExtension == ".S":
            arqInputBase = fileName
            isAsInput = True        
        if fileExtension == ".c":
            arqInputBase = fileName
        args = args + var + " "
        args_imed = args_imed + var + " " 
    else:
        args = args + var + " "
        args_imed = args_imed + var + " " 

if arqoutput == "":
    if genObj == True:
        arqoutput = arqInputBase + ".o"
    elif genAs == True:
        arqoutput = arqInputBase + ".s"
    else:
        arqoutput = "a.out"
    arqoutput_imed = arqoutput + "._bc" 
    arqoutput_imed2 = arqoutput + "._bco"
    arqoutput_imed3 = arqoutput + "._s"
    arqoutput_imed4 = arqoutput + ".o"
    args_imed = args_imed + " -o " + arqoutput_imed
#    comando2 = llvminstall + "clang " + args + " " + flags
#    print comando2
#    retval = subprocess.call(comando2, shell=True)
#    sys.exit(retval);

if isAsInput == True:
    emitllvm="-target mipsel-unknown-linux -E --sysroot=/tools"

comando2 = llvminstall + "clang " + emitllvm + " " + args_imed
if verbose == True:
    print comando2
retval = subprocess.call(comando2, shell=True)
if retval != 0:
    sys.exit(retval);

opt = ""
if hasO1 == True:
    opt = "-O1"
elif hasO2 == True:
    opt = "-O2"
elif hasO3 == True:
    opt = "-O3"

if isAsInput == False:
    if opt != "":
        comando3 = llvminstall + "opt " + opt + " " + arqoutput_imed + " -o " + arqoutput_imed2
        if verbose == True:
            print comando3
        retval = subprocess.call(comando3, shell=True)
    else:
        comando3 = "cp " + arqoutput_imed + " " + arqoutput_imed2
        if verbose == True:
            print comando3
        subprocess.call(comando3, shell=True)

    comando5 = "rm " + arqoutput_imed 
    if verbose == True:
        print comando5
    subprocess.call(comando5, shell=True)

    if retval != 0:
        sys.exit(retval);

    comando6 = llvminstall + llvmllc + " " +  llcargs +  " " +  opt + " " + arqoutput_imed2 + " -o " + arqoutput_imed3
    if verbose == True:
        print comando6
    retval = subprocess.call(comando6, shell=True)

    comando7 = "rm " + arqoutput_imed2 
    if verbose == True:
        print comando7
    subprocess.call(comando7, shell=True)
    if retval != 0:
        sys.exit(retval);
    if genAs:
        comando7 = "mv " + arqoutput_imed3 +  " " + arqoutput 
        if verbose == True:
            print comando7
        subprocess.call(comando7, shell=True)
        sys.exit(0)
else:
    arqoutput_imed3 = arqoutput_imed

comando8 = oias + " " + arqoutput_imed3 + " -o " + arqoutput_imed4
if verbose == True:
    print comando8
retval = subprocess.call(comando8, shell=True)

comando9 = "rm " + arqoutput_imed3
if verbose == True:
    print comando9
if retval != 0:
    if verbose == True:
        comando9 = "cat " + arqoutput_imed3 + " && " + comando9
subprocess.call(comando9, shell=True)
if retval != 0:
    sys.exit(retval);
if genObj:
    comando7 = "mv " + arqoutput_imed4 +  " " + arqoutput 
    if verbose == True:
        print comando7
    subprocess.call(comando7, shell=True)
    sys.exit(0)


if hasDebug == True:
    crossmips = crossmips + " -g"

comando10 = crossmips + " " + arqoutput_imed4 + " -o " + arqoutput
if verbose == True:
    print comando10
retval = subprocess.call(comando10, shell=True)

comando11 = "rm " + arqoutput_imed4
if verbose == True:
    print comando11
subprocess.call(comando11, shell=True)

if retval != 0:
    sys.exit(retval);

